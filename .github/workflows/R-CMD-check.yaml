# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  push:
  pull_request:
    branches:
      - main

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-20.04,   r: 'oldrel',  scihub_user: 'sen2r_travis_oldrel',  rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {os: ubuntu-20.04,   r: 'release', scihub_user: 'sen2r_travis_release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {os: ubuntu-20.04,   r: 'devel',   scihub_user: 'sen2r_travis_devel',   rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {os: windows-latest, r: 'release', scihub_user: 'sen2r_ci_windows'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      SCIHUB_USER: ${{ matrix.config.scihub_user }}
      SCIHUB_PASSWORD: ${{ secrets.CI_PASSWORD }}
      OS_NAME_STRING: ${{ matrix.config.os }}
      R_VERSION_STRING: ${{ matrix.config.r }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v2

      - name: "Query dependencies"
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: "Cache R packages"
        if: runner.os != 'Windows'
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: "[Linux] Install system dependencies"
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - name: "[Linux] Install sen2r system dependencies"
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install \
            gdal-bin \
            aria2 \
            libpython2-dev \
            libudunits2-dev \
            libgdal-dev \
            libjq-dev \
            libprotobuf-dev \
            protobuf-compiler \
            libv8-dev \
            libssl-dev \
            libcairo2-dev

      - id: 'auth'
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: 'Set up Google Cloud SDK'
        uses: google-github-actions/setup-gcloud@v0

      - name: "Use gcloud CLI"
        run: gcloud info

      # - name: "Install CRAN {sf}"
      #   run: |
      #     remotes::install_cran(c("wk","s2","sf"), force = TRUE)
      #   shell: Rscript {0}

      - name: "Install dependencies"
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: "Check"
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: "Upload check results"
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
